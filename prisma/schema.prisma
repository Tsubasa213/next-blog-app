// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// 投稿記事テーブル
model Post {
  id            String   @id @default(cuid())
  title         String
  content       String
  titleFont     String   @default("default")  // 追加
  contentFont   String   @default("default")  // 追加
  coverImageKey String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  categories     PostCategory[]
}

model Folder {
  id          String     @id @default(cuid())
  name        String     @unique
  categories  Category[]
  contents    FolderContent[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

// フォルダの内容を保存するテーブル
model FolderContent {
  id        String   @id @default(uuid())
  folderId  String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)

  @@unique([folderId, content])
}

// カテゴリテーブル
model Category {
  id         String         @id @default(uuid())
  name       String         @unique
  folderId   String
  folder     Folder        @relation(fields: [folderId], references: [id])
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  posts      PostCategory[]
}

// 投稿記事とカテゴリを紐づける中間テーブル
model PostCategory {
  id          String   @id @default(uuid())
  postId      String
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}